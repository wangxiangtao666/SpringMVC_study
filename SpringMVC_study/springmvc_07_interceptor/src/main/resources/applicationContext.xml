<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="com.tao.controller"/>
    <!--静态资源过滤器-->
    <mvc:default-servlet-handler/>
    <!--JSON乱码问题配置-->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
                        <property name="failOnEmptyBeans" value="false"/>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--视图解析器：DispatcherServlet传递过来的ModelAndView-->
    <!--在视图解析器中我们把所有的视图都存放在/WEB-INF/目录下，这样
    可以保证视图安全，因为这个目录下的文件，客户端不能直接访问-->

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id="InternalResourceViewResolver">
        <!--前缀-->
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <!--后缀-->
        <property name="suffix" value=".jsp"/>
    </bean>
    <!--有的处理器映射器类是需要配置key来作为访问路径，通过id再定位到bean,这里使用的直接配在id上就可以，反正也不会取这个对象-->
    <!--<bean name="/h1" class="com.tao.controller.HelloController1"/>-->

    <!--拦截器-->
    <mvc:interceptors>
        <!--<mvc:interceptor>-->
        <!--    <mvc:mapping path="/**"/>-->
        <!--    <bean class="com.tao.config.Interceptor"></bean>-->
        <!--</mvc:interceptor>-->
        <mvc:interceptor>
            <mvc:mapping path="/user/**"/>
            <bean class="com.tao.config.LoginInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>
    
</beans>